#pragma checksum "C:\FullProject\OneClickInventory\OneClickInventory\Views\UserRole\UserProfile.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "51f5f8517b9f113533276a8a4d212e4650d461a0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UserRole_UserProfile), @"mvc.1.0.view", @"/Views/UserRole/UserProfile.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\FullProject\OneClickInventory\OneClickInventory\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\FullProject\OneClickInventory\OneClickInventory\Views\_ViewImports.cshtml"
using OneClickInventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\FullProject\OneClickInventory\OneClickInventory\Views\_ViewImports.cshtml"
using OneClickInventory.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\FullProject\OneClickInventory\OneClickInventory\Views\_ViewImports.cshtml"
using OneClickInventory.Models.AccountViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\FullProject\OneClickInventory\OneClickInventory\Views\_ViewImports.cshtml"
using OneClickInventory.Models.ManageViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\FullProject\OneClickInventory\OneClickInventory\Views\_ViewImports.cshtml"
using OneClickInventory.Pages;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"51f5f8517b9f113533276a8a4d212e4650d461a0", @"/Views/UserRole/UserProfile.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"63cca2dd2f6d06493da8e671d3c3679649e59604", @"/Views/_ViewImports.cshtml")]
    public class Views_UserRole_UserProfile : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<OneClickInventory.Models.ApplicationUser>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\FullProject\OneClickInventory\OneClickInventory\Views\UserRole\UserProfile.cshtml"
  
    ViewData["Title"] = "User Profile";
    UserProfile profile = Context.UserProfile.SingleOrDefault(x => x.ApplicationUserId.Equals(Model.Id));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!-- Content Wrapper. Contains page content -->
<div class=""content-wrapper"">

    <!-- Main content -->
    <section class=""content"">
        <!-- Default box -->
        <div class=""box"">
            <div class=""box-header with-border"">
                <h3 class=""box-title text-primary""><i class=""fa fa-users""></i> ");
#nullable restore
#line 16 "C:\FullProject\OneClickInventory\OneClickInventory\Views\UserRole\UserProfile.cshtml"
                                                                          Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h3>
                <div class=""box-tools pull-right"">
                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""collapse"" data-toggle=""tooltip""
                            title=""Collapse"">
                        <i class=""fa fa-minus""></i>
                    </button>
                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove"" data-toggle=""tooltip"" title=""Remove"">
                        <i class=""fa fa-times""></i>
                    </button>
                </div>
            </div>
            <div class=""box-body"">
                <div class=""row"">
                    <div class=""col-lg-4"">
                        <div class=""row"">
                            <div class=""col-lg-12"">
                                <img id=""profilePicture"" class=""profile-user-img img-responsive img-circle""");
            BeginWriteAttribute("src", " src=\"", 1487, "\"", 1516, 1);
#nullable restore
#line 32 "C:\FullProject\OneClickInventory\OneClickInventory\Views\UserRole\UserProfile.cshtml"
WriteAttributeValue("", 1493, profile.ProfilePicture, 1493, 23, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" alt=""User profile picture"">
                            </div>
                        </div>
                     
                        <div class=""row"">
                            <div class=""col-lg-12"">
                                <div class=""cols-sample-area"">
                                    <div class=""frame"">
                                        <div class=""control"">
                                            <div id=""UploadDefault""></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""col-lg-8"">
                        <div class=""form-group"">
                            <div class=""col-lg-3"">Email</div>
                            <div class=""col-lg-9""><input class=""form-control""");
            BeginWriteAttribute("value", " value=\"", 2456, "\"", 2478, 1);
#nullable restore
#line 51 "C:\FullProject\OneClickInventory\OneClickInventory\Views\UserRole\UserProfile.cshtml"
WriteAttributeValue("", 2464, profile.Email, 2464, 14, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" disabled/></div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-lg-3\">First Name</div>\r\n                            <div class=\"col-lg-9\"><input class=\"form-control\"");
            BeginWriteAttribute("value", " value=\"", 2725, "\"", 2751, 1);
#nullable restore
#line 55 "C:\FullProject\OneClickInventory\OneClickInventory\Views\UserRole\UserProfile.cshtml"
WriteAttributeValue("", 2733, profile.FirstName, 2733, 18, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" disabled /></div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-lg-3\">Last Name</div>\r\n                            <div class=\"col-lg-9\"><input class=\"form-control\"");
            BeginWriteAttribute("value", " value=\"", 2998, "\"", 3023, 1);
#nullable restore
#line 59 "C:\FullProject\OneClickInventory\OneClickInventory\Views\UserRole\UserProfile.cshtml"
WriteAttributeValue("", 3006, profile.LastName, 3006, 17, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" disabled /></div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
            <div class=""box-footer"">

            </div>
            <!-- /.box-footer-->
        </div>
        <div class=""box"">
            <div class=""box-header with-border"">
                <h3 class=""box-title text-primary""><i class=""fa fa-user""></i> Edit Profile </h3>
                <div class=""box-tools pull-right"">
                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""collapse"" data-toggle=""tooltip""
                            title=""Collapse"">
                        <i class=""fa fa-minus""></i>
                    </button>
                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove"" data-toggle=""tooltip"" title=""Remove"">
                        <i class=""fa fa-times""></i>
                    </button>
                </div>
            </div>
            <div class=""box-bod");
            WriteLiteral(@"y"">
                <div id=""Grid""></div>
            </div>
        </div>
        <div class=""box"">
            <div class=""box-header with-border"">
                <h3 class=""box-title text-primary""><i class=""fa fa-key""></i> Change Password </h3>
                <div class=""box-tools pull-right"">
                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""collapse"" data-toggle=""tooltip""
                            title=""Collapse"">
                        <i class=""fa fa-minus""></i>
                    </button>
                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove"" data-toggle=""tooltip"" title=""Remove"">
                        <i class=""fa fa-times""></i>
                    </button>
                </div>
            </div>
            <div class=""box-body"">
                <div id=""GridPassword""></div>
            </div>
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper --");
            WriteLiteral(@">

<script id=""templateForm"" type=""text/template"">
    <input hidden id=""UserProfileId"" name=""UserProfileId"" value=""{{:UserProfileId}}"" />
    <input hidden id=""ApplicationUserId"" name=""ApplicationUserId"" value=""{{:ApplicationUserId}}"" />
    <table cellspacing=""10"">
        <tr>
            <td>
                Email
            </td>
            <td colspan=""3"">
                <input id=""EmailPassword"" name=""EmailPassword"" value=""{{:Email}}"" />
            </td>
        </tr>
        <tr>
            <td>
                First Name
            </td>
            <td>
                <input id=""FirstNamePassword"" name=""FirstNamePassword"" value=""{{:FirstName}}"" />
            </td>
            <td>
                Last Name
            </td>
            <td>
                <input id=""LastNamePassword"" name=""LastNamePassword"" value=""{{:LastName}}"" />
            </td>
        </tr>
        <tr>
            <td>
                Old Password
            </td>
            <td>
  ");
            WriteLiteral(@"              <input id=""OldPassword"" name=""OldPassword"" value="""" />
            </td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td>
                New Password
            </td>
            <td>
                <input id=""Password"" name=""Password"" value="""" />
            </td>
            <td>
                Re-type Password
            </td>
            <td>
                <input id=""ConfirmPassword"" name=""ConfirmPassword"" value="""" />
            </td>
        </tr>
    </table>
</script>
<script id=""templateEditForm"" type=""text/template"">
    <input hidden id=""UserProfileId"" name=""UserProfileId"" value=""{{:UserProfileId}}"" />
    <input hidden id=""ApplicationUserId"" name=""ApplicationUserId"" value=""{{:ApplicationUserId}}"" />
    <table cellspacing=""10"">
        <tr>
            <td>
                Email
            </td>
            <td colspan=""3"">
                <input id=""Email"" name=""Email"" value=""{{:Email}}"" />
            </t");
            WriteLiteral(@"d>
        </tr>
        <tr>
            <td>
                First Name
            </td>
            <td>
                <input id=""FirstName"" name=""FirstName"" value=""{{:FirstName}}"" />
            </td>
            <td>
                Last Name
            </td>
            <td>
                <input id=""LastName"" name=""LastName"" value=""{{:LastName}}"" />
            </td>
        </tr>
    </table>
</script>

");
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"">
        $(function () {

            $(""#UploadDefault"").ejUploadbox({
                saveUrl: ""/api/UploadProfilePicture"",
                allowDragAndDrop: true,
                multipleFilesSelection: false,
                success: ""uploadSuccess"",
                autoUpload: true,
            });

            var dataManager = ej.DataManager({
                url: ""/api/User/GetByApplicationUserId/");
#nullable restore
#line 209 "C:\FullProject\OneClickInventory\OneClickInventory\Views\UserRole\UserProfile.cshtml"
                                                  Write(Model.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });

            dataManager.ready.done(function (e) {
                renderGridProfile(e);
                renderGridChangePassword(e);
            });



        });

        function renderGridProfile(e) {
            $(""#Grid"").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),
                    updateUrl: ""/api/User/Update""
                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: [""edit"", ""update"", ""cancel""]
                },
                editSettings: {
                    allowEditing: true,
                    allowAdding: true,
                    allowDeleting: true,
                    showDeleteConfirmDialog: true,
                    editMode: ""dialogtemplate"",
                    dialogEditorTemplateID");
                WriteLiteral(@": ""#templateEditForm"",
                },
                isResponsive: true,
                enableResponsiveRow: true,
                allowSorting: false,
                allowSearching: false,
                allowFiltering: false,
                filterSettings: {
                    filterType: ""excel"",
                    maxFilterChoices: 100,
                    enableCaseSensitivity: false
                },
                allowPaging: false,
                pageSettings: { pageSize: 10 },
                columns: [
                    { field: ""UserProfileId"", headerText: 'Id', isPrimaryKey: true, isIdentity: true, visible: false },
                    { field: ""Email"", headerText: 'Email', validationRules: { required: true } },
                    { field: ""FirstName"", headerText: 'First Name', validationRules: { required: true } },
                    { field: ""LastName"", headerText: 'Last Name', validationRules: { required: false } },
                ],
                actio");
                WriteLiteral(@"nComplete: ""complete"",
            });
        }

        function renderGridChangePassword(e) {
            $(""#GridPassword"").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),
                    updateUrl: ""/api/User/ChangePassword""
                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: [""edit"", ""update"", ""cancel""]
                },
                editSettings: {
                    allowEditing: true,
                    allowAdding: true,
                    allowDeleting: true,
                    showDeleteConfirmDialog: true,
                    editMode: ""dialogtemplate"",
                    dialogEditorTemplateID: ""#templateForm"",
                },
                isResponsive: true,
                enableResponsiveRow: true,
                allowSorting: false,
                allowSearching: false,
  ");
                WriteLiteral(@"              allowFiltering: false,
                filterSettings: {
                    filterType: ""excel"",
                    maxFilterChoices: 100,
                    enableCaseSensitivity: false
                },
                allowPaging: false,
                pageSettings: { pageSize: 10 },
                columns: [
                    { field: ""UserProfileId"", headerText: 'Id', isPrimaryKey: true, isIdentity: true, visible: false },
                    { field: ""Email"", headerText: 'Email', validationRules: { required: true } },
                    { field: ""FirstName"", headerText: 'First Name', validationRules: { required: true } },
                    { field: ""LastName"", headerText: 'Last Name', validationRules: { required: false } },
                ],
                actionComplete: ""completeGridPassword"",
            });
        }


        function complete(args) {

            $(""#Email"").ejMaskEdit({
                inputMode: 'Text',
            });
         ");
                WriteLiteral(@"   $(""#FirstName"").ejMaskEdit({
                inputMode: 'Text',
            });
            $(""#LastName"").ejMaskEdit({
                inputMode: 'Text',
            });

            if (args.requestType == 'beginedit') {
                $(""#"" + this._id + ""_dialogEdit"").ejDialog({ title: ""Edit Profile"" });
                $(""#Email"").ejMaskEdit(""disable"");
            }

            if (args.requestType == ""save"") {
                this.refreshContent();
            }

        }

        function completeGridPassword(args) {

            $(""#EmailPassword"").ejMaskEdit({
                inputMode: 'Text',
            });
            $(""#FirstNamePassword"").ejMaskEdit({
                inputMode: 'Text',
            });
            $(""#LastNamePassword"").ejMaskEdit({
                inputMode: 'Text',
            });
            $(""#OldPassword"").ejMaskEdit({
                inputMode: 'Password',
                validationRules: { required: true },
            });
        ");
                WriteLiteral(@"    $(""#Password"").ejMaskEdit({
                inputMode: 'Password',
                validationRules: { required: true },
            });
            $(""#ConfirmPassword"").ejMaskEdit({
                inputMode: 'Password',
                validationRules: { required: true },
            });

            if (args.requestType == 'beginedit') {
                $(""#"" + this._id + ""_dialogEdit"").ejDialog({ title: ""Edit Password"" });
                $(""#EmailPassword"").ejMaskEdit(""disable"");
                $(""#FirstNamePassword"").ejMaskEdit(""disable"");
                $(""#LastNamePassword"").ejMaskEdit(""disable"");
            }

            if (args.requestType == ""save"") {
                this.refreshContent();
            }

        }

        function uploadSuccess(e) {
            var resText = JSON.parse(e.responseText);
            $('.profilePicture').attr('src', '../upload/' + resText);
            $('#profilePicture').attr('src', '../upload/' + resText);
            $('.img-cir");
                WriteLiteral("cle\').attr(\'src\', \'../upload/\' + resText);\r\n        }\r\n\r\n\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public OneClickInventory.Data.ApplicationDbContext Context { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<OneClickInventory.Models.ApplicationUser> Html { get; private set; }
    }
}
#pragma warning restore 1591
